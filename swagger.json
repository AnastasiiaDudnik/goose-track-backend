{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Swagger GooseTrack",
    "description": "Цей проект є веб-додатком для керування особистими справами.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json, multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://goose-calendar.onrender.com/" },
    { "url": "http://localhost:3001" }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request(invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email already in use",
            "content": {}
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login user",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User is logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "Log out user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout is successed"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information about the current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Information found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },

    "/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Reviews collection found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Create a new review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Review's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК - Review was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewCreationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Bad request(invalid request body)",
            "content": {}
          },
          "409": {
            "description": "User already has a review",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Bogdan"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "bogdan@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User's id"
              },
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar path"
              }
            }
          }
        },

        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgzYjEzOWRkMDlmY2E5YWFhNmRhNCIsImlhdCI6MTY4NzY5ODE5NSwiZXhwIjoxNjg3Njk4Mzc1fQ.P3ZWu3PzRpMyuT6ngche4ojbYizBvnOOnTSqniABkhQ",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgzYjEzOWRkMDlmY2E5YWFhNmRhNCIsImlhdCI6MTY4NzY5ODE5NSwiZXhwIjoxNjg4MzAyOTk1fQ.Dycs8it1fF4WRFYiqV-0DDlZ3v_YRBTw6ThrOd5wx2A",
          "user": {
            "id": "64983b139dd09fca9aaa6da4",
            "name": "Bogdan",
            "email": "bogdan@gmail.com",
            "avatarURL": "http://www.gravatar.com/2a06849295a6965ddd313b186672c523.json"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "bogdan@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User's id"
              },
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar path"
              },
              "phone": {
                "type": "string",
                "description": "User's phone"
              },
              "birthday": {
                "type": "data",
                "description": "User's birthday"
              },
              "skype": {
                "type": "string",
                "description": "User's skype"
              }
            }
          }
        },

        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgzYjEzOWRkMDlmY2E5YWFhNmRhNCIsImlhdCI6MTY4Nzc4NTk5MCwiZXhwIjoxNjg3Nzg2MTcwfQ.pDaxG-bCwh654H34GaqIDe6oByCLavaMCLN9o98X-5M",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgzYjEzOWRkMDlmY2E5YWFhNmRhNCIsImlhdCI6MTY4Nzc4NTk5MCwiZXhwIjoxNjg4MzkwNzkwfQ.cUytD86J8B87cpas7O1mNvSPciSKAc7zcnPRd23p9zs",
          "user": {
            "id": "64983b139dd09fca9aaa6da4",
            "name": "Bogdan",
            "email": "bogdan@gmail.com",
            "avatarURL": "http://www.gravatar.com/c30d6c14569650b95a78e33e5013683e.json",
            "phone": null,
            "birthday": null,
            "skype": null
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar path"
          },
          "phone": {
            "type": "string",
            "description": "User's phone"
          },
          "birthday": {
            "type": "data",
            "description": "User's birthday"
          },
          "skype": {
            "type": "string",
            "description": "User's skype"
          }
        },

        "example": {
          "id": "64983b139dd09fca9aaa6da4",
          "name": "Bogdan",
          "email": "bogdan@gmail.com",
          "avatarURL": "http://www.gravatar.com/c30d6c14569650b95a78e33e5013683e.json",
          "phone": null,
          "birthday": null,
          "skype": null
        }
      },

      "ReviewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Review id"
            },
            "rating": {
              "type": "number",
              "description": "Review rating"
            },
            "comment": {
              "type": "string",
              "description": "Review comment"
            },
            "owner": {
              "type": "object",
              "description": "Review owner",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Owner id"
                },
                "name": {
                  "type": "string",
                  "description": "Owner name"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "Owner avatarURL"
                }
              },
              "createdAt": { "type": "string" },
              "updatedAt": { "type": "string" }
            }
          }
        },
        "example": [
          {
            "_id": "649b43b13b98cd738d44bf7d",
            "rating": 5,
            "comment": "Very cool app, everything is clear and functional. A great program for time chronology.",
            "owner": {
              "_id": "649b43403b98cd738d44bf77",
              "name": "Vitalii",
              "avatarURL": "http://www.gravatar.com/43311ff72844c2febf41f3a2e3fe91b7.json"
            },
            "createdAt": "2023-06-27T20:16:49.198Z",
            "updatedAt": "2023-06-27T20:16:49.198Z"
          },
          {
            "_id": "649c02e4d5ae7f2605a11aac",
            "rating": 3,
            "comment": "A pleasant find for me. It's exactly what I was looking for. The main advantage is the visual visualization in the form of boards and cards. I recommend it!",
            "owner": {
              "_id": "64983b139dd09fca9aaa6da4",
              "name": "Bogdan",
              "avatarURL": "http://www.gravatar.com/c30d6c14569650b95a78e33e5013683e.json"
            },
            "createdAt": "2023-06-28T09:52:36.971Z",
            "updatedAt": "2023-06-28T09:52:36.971Z"
          }
        ]
      },
      "ReviewCreationRequest": {
        "type": "object",
        "required": ["rating", "comment"],
        "properties": {
          "rating": {
            "type": "number",
            "description": "Review rating",
            "example": "3"
          },
          "comment": {
            "type": "string",
            "description": "Review comment",
            "example": "A pleasant find for me. It's exactly what I was looking for. The main advantage is the visual visualization in the form of boards and cards. I recommend it!"
          }
        }
      },
      "ReviewCreationResponse": {
        "type": "object",
        "description": "Review",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Review id"
          },
          "rating": {
            "type": "number",
            "description": "Review rating"
          },
          "comment": {
            "type": "string",
            "description": "Review comment"
          },
          "owner": {
            "type": "string",
            "description": "Owner id"
          },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        },
        "example": [
          {
            "rating": 3,
            "comment": "A pleasant find for me. It's exactly what I was looking for. The main advantage is the visual visualization in the form of boards and cards. I recommend it!",
            "owner": "64983b139dd09fca9aaa6da4",
            "_id": "649c214a1f128a4c54da4b52",
            "createdAt": "2023-06-28T12:02:18.465Z",
            "updatedAt": "2023-06-28T12:02:18.465Z"
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "name": "Authorization",
        "description": "Bearer token to access these api endpoints"
      }
    }
  }
}
